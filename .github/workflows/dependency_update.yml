name: Update Dependency
on:
  workflow_dispatch:
  schedule:
    - cron: '*/10 * * * *'

permissions:
  contents: read

concurrency: update_dependency

defaults:
  run:
    shell: bash

jobs:
  update-repositories:
    permissions:
      contents: write
      pull-requests: write
      # Actions permission allows us cancel workflows.
      actions: write

    name: "Update Repository"
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout To Ockam Repository
        uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936
        with:
          repository: 'metaclips/ockam'
          path: 'ockam'
          fetch-depth: 0

      - name: Checkout To Test Deployment Repository
        uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936
        with:
          path: test_deployment
          fetch-depth: 0

      - name: Get Commit SHA Of Ockam Repository
        shell: bash
        working-directory: ockam
        id: ockam_ref
        run: |
          set -ex
          # Get recent commit SHA of Elixir path
          commit_sha=$(git rev-list -1 HEAD implementations/rust/ockam)
          echo "$commit_sha"
          echo "commit_sha=${commit_sha}" >> $GITHUB_OUTPUT

      - name: Get If Branch Exists
        shell: bash
        working-directory: test_deployment
        id: branch
        run: |
          set -ex
          # Check if there was a branch named after updated /ockam commit SHA
          branch_name="bot/update_${{ steps.ockam_ref.outputs.commit_sha }}"

          if ! git show-ref --quiet refs/heads/${branch_name}; then
            echo "branch_exists=false" >> $GITHUB_OUTPUT
            echo "branch_name=${branch_name}" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "branch_exists=true" >> $GITHUB_OUTPUT

      - name: Cancel Workflow If Branch Exists
        if: ${{ steps.branch.outputs.branch_exists == 'true' }}
        uses: build-trust/.github/actions/cancel_workflow@custom-actions

      - name: Update Lock File
        shell: bash
        working-directory: test_deployment
        if: ${{ steps.branch.outputs.branch_exists == 'false' }}
        run: |
          # Create a new branch with the specified naming schema
          # Update dependency for the repository

          set -ex
          git pull --rebase

          # Update Cargo.lock file
          cargo update

          # Check if there was any update
          git diff --exit-code -s Cargo.lock || echo "changes_made=true" >> $GITHUB_OUTPUT

      - uses: peter-evans/create-pull-request@f094b77505fb89581e68a1163fbd2fffece39da1 # v4.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.branch.outputs.branch_name }}
          commit-message: "ci: update ockam dependency on commit ${{ steps.ockam_ref.outputs.commit_sha }}"
          title: Update ockam dependency on commit ${{ steps.ockam_ref.outputs.commit_sha }}
          body: |
            Update ockam dependency on commit ${{ steps.ockam_ref.outputs.commit_sha }}
          assignees: metaclips
          add-paths: Cargo.lock
          path: test_deployment
          base: main
